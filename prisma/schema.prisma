// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgres"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id            String       @id @default(cuid())
  name          String?
  email         String?      @unique
  emailVerified DateTime?    @map("email_verified")
  image         String?
  accounts      Account[]
  invites       Meditation[]

  @@map("users")
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
  @@map("accounts")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

model Template {
  id             Int          @id @unique @default(autoincrement())
  name           String       @unique
  file_name      String       @unique
  content_schema Json
  invites        Meditation[]

  @@map("templates")
}

model Meditation {
  id         Int       @id @default(autoincrement())
  name       String
  category   String
  user_id    String
  user       User      @relation(references: [id], fields: [user_id], onDelete: Cascade)
  content    Json
  Template   Template? @relation(fields: [templateId], references: [id])
  templateId Int?

  @@index([user_id])
  @@map("meditations")
}
